<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAARTSURBVFhH7Vfda1tlGD+b+To5J+npSduT74R0mSPYWihjiCBnTAfDOimyf2AXwwuvRVCIa76a
        j55krbaUqQM/LhahgogwZc6LqZX1YuIcyHAXgh/oHOq6OWRr/Z34BmLy5OSknrGb/uAHIXmf3/O8ed73
        eZ6X28Y2zGCT28mlORencXyD+HykfuQB9uv9Qfpc2pacTz7pm/W9IuSFj11Z1wVHxnHRkXV85cw61/gs
        f3aoNLQc02LTCJZnZvce4VI4GagEXhJz4s+2GdumGbpz7mvBSrDgr/hTTMZ6HPrwkDM6Fy3iX/qDCsIM
        7TP2Gwj05NT7U24maw0SWmLMk/d8Aid3251ugRvQWo3X4vuY/P9DcjGZEHKC6XSaJdJ+PbGQGGNutobd
        td17cdh/ohxYQRyX32Jzsf3MXX84eOag4M17v6SEraQn57mc0lIyc2se/rK/DoGNdsFW4t+9Q33fL6VZ
        6Vx9s26+buoHGDfuFiXWylg19rZSUY4KWeFb6vc+eDtaiz7B3PeGr+h7ixDpYESLvKavRyEWR0ojb5rZ
        VDcOzA6caTjvhYlTE3HHjOM2JdLOZoANpLmd4Vp4n1SQPrVljI8GRXSgO6MnRieZWncoZeVFSoDifwJk
        UE+pLqWkvIDW9z1lY0S5IJ9gMjT0Bo/69BFlTJEKsInxpfGRkBY6jXWmizuf4z9L1VMOJtGJwHLAjZ1/
        TRlTNAqwAaQ9WA4+rXcOrO+ZdlfG9Z2clr3MuhODs4MD/aSmZ4AMx9aO2UNzoTwK8w1Kp0mcw2vYjI+Z
        dcKreWU+w/9CGVM0G2ATuAQP+Uq+Om47mXZnxrkulsURtrwTjQCz/K+UMcV+A5xcnrT7i/798EFmCXOk
        cYB6ip0zTstTrENP83Bx+F3YdS1hKG/GKUaJEXAGL1HGFM0EqE/TaJvPubPuHyiNVsL3VXne4JKoadWG
        tnWWMqZoGCBu8J6lPXEpL12kbCki9au75nc5mQINvCOOU8YUuwWoF+uh4tASysaflF03ot0tMonuGF8c
        fxBn4W9KoJ3tAeqBhefCz4h58UdqvRHtGfvd0eroo0zKGHJJXqFE2tka4PTKtM9b8J63HbeZ2lw7BwuD
        5yGz41+1HojUIo+hVv1FCbVSD/Dw64c9SOfLOOC/U2tMEZuKatGnmHsT2OR2DJeG9Z5s2J6QzlWUBdN1
        sxsxua/htnfvwRQmqhMS3r6m+/JWieHkavzVuJ+57Q/xalxFdb9OCVtBXMb1UC00xdxtDYnlxBjGIMuD
        RAlajy5E9Vtr7mIYIVQNPYLX1wUI9z0pE9zAO/tSUAs+zuStgVpXxUA58A4c3Gxz2A9voR9/gHopMVnr
        gbnuYaWoLGA0Mt0lMAfeRJ9/Az15L5O591DfU6VIJXIU7ek0ztPnCPgbHPorGDqv4GJdRl38wlPwrGC8
        evbAyQMKM7s/SKXxjihzAvc852kwzYmGb4ttbKMJjvsHrJmQCdFyizAAAAAASUVORK5CYII=
</value>
  </data>
</root>